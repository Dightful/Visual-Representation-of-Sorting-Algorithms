# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'D:\0Good\SCHOLL\compu\y13 oproject\infomation page (1).ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1920, 1080)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(10, 0, 1901, 931))
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.textEdit = QtWidgets.QTextEdit(self.tab)
        self.textEdit.setGeometry(QtCore.QRect(10, 10, 901, 121))
        self.textEdit.setObjectName("textEdit")
        self.textEdit_2 = QtWidgets.QTextEdit(self.tab)
        self.textEdit_2.setGeometry(QtCore.QRect(20, 160, 901, 741))
        self.textEdit_2.setObjectName("textEdit_2")
        self.textEdit_3 = QtWidgets.QTextEdit(self.tab)
        self.textEdit_3.setGeometry(QtCore.QRect(940, 10, 941, 631))
        self.textEdit_3.setObjectName("textEdit_3")
        self.textEdit_4 = QtWidgets.QTextEdit(self.tab)
        self.textEdit_4.setGeometry(QtCore.QRect(940, 660, 951, 161))
        self.textEdit_4.setObjectName("textEdit_4")
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.textEdit_5 = QtWidgets.QTextEdit(self.tab_2)
        self.textEdit_5.setGeometry(QtCore.QRect(10, 10, 901, 121))
        self.textEdit_5.setObjectName("textEdit_5")
        self.textEdit_6 = QtWidgets.QTextEdit(self.tab_2)
        self.textEdit_6.setGeometry(QtCore.QRect(10, 140, 901, 741))
        self.textEdit_6.setObjectName("textEdit_6")
        self.textEdit_7 = QtWidgets.QTextEdit(self.tab_2)
        self.textEdit_7.setGeometry(QtCore.QRect(940, 10, 941, 631))
        self.textEdit_7.setObjectName("textEdit_7")
        self.tabWidget.addTab(self.tab_2, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.tabWidget.addTab(self.tab_3, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.textEdit_8 = QtWidgets.QTextEdit(self.tab_4)
        self.textEdit_8.setGeometry(QtCore.QRect(10, 10, 901, 121))
        self.textEdit_8.setObjectName("textEdit_8")
        self.textEdit_9 = QtWidgets.QTextEdit(self.tab_4)
        self.textEdit_9.setGeometry(QtCore.QRect(10, 140, 901, 741))
        self.textEdit_9.setObjectName("textEdit_9")
        self.textEdit_10 = QtWidgets.QTextEdit(self.tab_4)
        self.textEdit_10.setGeometry(QtCore.QRect(930, 10, 941, 631))
        self.textEdit_10.setObjectName("textEdit_10")
        self.tabWidget.addTab(self.tab_4, "")
        self.tab_5 = QtWidgets.QWidget()
        self.tab_5.setObjectName("tab_5")
        self.tabWidget.addTab(self.tab_5, "")
        self.tab_6 = QtWidgets.QWidget()
        self.tab_6.setObjectName("tab_6")
        self.tabWidget.addTab(self.tab_6, "")
        self.tab_7 = QtWidgets.QWidget()
        self.tab_7.setObjectName("tab_7")
        self.tabWidget.addTab(self.tab_7, "")
        self.tab_8 = QtWidgets.QWidget()
        self.tab_8.setObjectName("tab_8")
        self.tabWidget.addTab(self.tab_8, "")
        self.tab_9 = QtWidgets.QWidget()
        self.tab_9.setObjectName("tab_9")
        self.tabWidget.addTab(self.tab_9, "")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(50, 940, 131, 61))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(1760, 940, 131, 61))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton_2")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1920, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.textEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt; text-decoration: underline;\">What is it?</span></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:14pt; color:#273239; background-color:#ffffff;\">Bubble Sort is the simplest sorting algorithm that works by repeatedly swapping the adjacent elements if they are in the wrong order. This algorithm is not suitable nor fast for large data sets as its average and worst-case time complexity is quite high. </span></p></body></html>"))
        self.textEdit_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14pt; text-decoration: underline;\">How it Works</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#273239;\">Input: arr[] = [6,3,8,5,2]</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#273239;\">First Pass: </span></p>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\" style=\" margin-top:0px; margin-bottom:24px; margin-left:24px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">Bubble sort starts with very first two elements, comparing them to check which one is greater.</span></li></ul>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 2;\"><li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\" style=\" margin-top:5px; margin-bottom:0px; margin-left:48px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">( 6,3,8,5,2 ) –&gt; ( 3,6,8,5,2 ), Here, the algorithm compares the first two elements, and  since 6 &gt; 3, they are swapped.</span></li>\n"
"<li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\" style=\" margin-top:0px; margin-bottom:0px; margin-left:48px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">( 3,6,8,5,2 ) –&gt;  ( 3,6,8,5,2 ), No swap since 6 &gt; 8 </span></li>\n"
"<li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\" style=\" margin-top:0px; margin-bottom:0px; margin-left:48px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">( 3,6,8,5,2 ) –&gt;  ( 3,6,5,8,2 ), Swap since 8 &gt; 5 </span></li>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 2;\"><li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\" style=\" margin-top:0px; margin-bottom:0px; margin-left:48px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">( 3,6,8,5,2 ) –&gt;  ( 3,6,5,2,8 ), Swap since 8 &gt; 2</span></li></ul>\n"
"<li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\" style=\" margin-top:0px; margin-bottom:0px; margin-left:48px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">This is now called a pass, where the algorithm gets from one sidde to the other</span></li></ul>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#273239;\">Second Pass: </span></p>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\" style=\" margin-top:0px; margin-bottom:24px; margin-left:24px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">Now, during second pass it will look like this:</span></li></ul>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 2;\"><li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\" style=\" margin-top:5px; margin-bottom:0px; margin-left:48px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">( 3,6,5,2,8 ) –&gt; ( 3,6,5,2,8 ) No swap</span></li>\n"
"<li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\" style=\" margin-top:0px; margin-bottom:0px; margin-left:48px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">( 3,6,5,2,8 ) –&gt; ( 3,5,6,2,8 ), Swap since 6 &gt; 5 </span></li></ul>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 2;\"><li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\" style=\" margin-top:0px; margin-bottom:0px; margin-left:48px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">( 3,5,6,2,8 ) –&gt; ( 3,5,2,6,8 ), Swap since 6 &gt; 2</span></li></ul>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 2;\"><li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\" style=\" margin-top:0px; margin-bottom:0px; margin-left:48px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">( 3,5,2,6,8 ) –&gt; ( 3,5,2,6,8 )</span></li></ul>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:48px; margin-right:0px; -qt-block-indent:2; text-indent:0px; line-height:158%; font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#273239;\">Third Pass: </span></p>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\" style=\" margin-top:0px; margin-bottom:24px; margin-left:24px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">Now, after the third pass it will look like this:</span></li></ul>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 2;\"><li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\" style=\" margin-top:0px; margin-bottom:0px; margin-left:48px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">( 3,2,5,6,8 ) </span></li></ul>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:48px; margin-right:0px; -qt-block-indent:2; text-indent:0px; line-height:158%; font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#273239;\">Fourth Pass: </span></p>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\" style=\" margin-top:0px; margin-bottom:24px; margin-left:24px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">Now, after the fourth pass it will look like this:</span></li></ul>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 2;\"><li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\" style=\" margin-top:0px; margin-bottom:0px; margin-left:48px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">( 2,3,5,6,8 ) </span></li></ul>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#273239;\">Fifth Pass: </span></p>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\" style=\" margin-top:0px; margin-bottom:0px; margin-left:24px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">Now, the array is already sorted, but our algorithm does not know if it is completed.</span></li>\n"
"<li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\" style=\" margin-top:0px; margin-bottom:24px; margin-left:24px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">The algorithm needs one whole pass without any swap to know it is sorted.</span></li></ul>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 2;\"><li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\" style=\" margin-top:0px; margin-bottom:0px; margin-left:48px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">( 2,3,5,6,8 ) -&gt; ( 2,3,5,6,8 ) </span></li></ul>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt;\"><br /></span></p></body></html>"))
        self.textEdit_3.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14pt; text-decoration: underline;\">Time Complexities</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:14pt; text-decoration: underline;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#273239; background-color:#ffffff;\">Time Complexity: O(N^2)</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#273239; background-color:#ffffff;\">Worst and Average Case Time Complexity: O(N^2). The worst case occurs when an array is reverse sorted.</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#273239; background-color:#ffffff;\">Best Case Time Complexity: O(N). The best case occurs when an array is already sorted.</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#273239; background-color:#ffffff;\">Auxiliary Space: O(1)</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#273239;\"><br /></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#273239;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:11pt; color:#273239; background-color:#ffffff;\">The</span><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:11pt; color:#273239;\"> worst-case condition for bubble sort occurs when elements of the array are arranged in decreasing order.<br />In the worst case, the total number of iterations or passes required to sort a given array is (n-1). Where ‘n’ is a number of elements present in the array.</span></p>\n"
"<p style=\" margin-top:10px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:11pt; color:#000000;\">  At pass 1 :  Number of comparisons = (n-1)<br />                    Number of swaps = (n-1)</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:11pt; color:#000000;\">  At pass 2 :  Number of comparisons = (n-2)<br />                    Number of swaps = (n-2)</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:11pt; color:#000000;\"><br />  At pass n-1 :  Number of comparisons = 1<br />                       Number of swaps = 1</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:11pt; color:#000000;\">Now , calculating total number of comparison required to sort the array<br />= (n-1) + (n-2) +  (n-3) + . . . 2 + 1<br />= (n-1)*(n-1+1)/2  <br />= n (n-1)/2    </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:14pt; text-decoration: underline; color:#000000;\">Worse case for bubble, summarised:</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:11pt; color:#000000;\">Total number of swaps = Total number of comparison<br />Total number of comparison (Worst case) = n(n-1)/2<br />Total number of swaps (Worst case) = n(n-1)/2</span></p></body></html>"))
        self.textEdit_4.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14pt; text-decoration: underline;\">What can be done about how long bubble sort takes?:</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#273239;\">Boundary Case for Bubble sort:</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:8pt; color:#273239; background-color:#ffffff;\">    </span><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#273239; background-color:#ffffff;\">Bubble sort takes minimum time (Order of n) when elements are already sorted. Hence it is best to check if the array is         already sorted or not beforehand, to avoid O(N</span><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#273239;\">2) time complexity.</span></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Bubble"))
        self.textEdit_5.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt; text-decoration: underline;\">What is it?</span></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:14pt; color:#273239; background-color:#ffffff;\">Insertion Sort is one of the simplest sorting algorithm that works by traversing through the list and comparing the current item to all that is left of it. This algorithm is not suitable nor fast for large data sets as its average and worst-case time complexity is quite high. </span></p></body></html>"))
        self.textEdit_6.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14pt; text-decoration: underline;\">How it Works</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#273239;\">Input: arr[] = [6,3,8,5,2]</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#273239;\">First Pass: </span></p>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\" style=\" margin-top:0px; margin-bottom:24px; margin-left:24px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">Insertion sort starts with the 2nd element, comparing it the left item to see which one is greater.</span></li></ul>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 2;\"><li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\" style=\" margin-top:5px; margin-bottom:0px; margin-left:48px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">( 6,3,8,5,2 ) –&gt; ( 3,6,8,5,2 ), Here, the algorithm compares the first two elements, and  since 6 &gt; 3, they are swapped.</span></li>\n"
"<li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\" style=\" margin-top:0px; margin-bottom:0px; margin-left:48px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">( 3,6,8,5,2 ) –&gt;  ( 3,6,8,5,2 ), Now we are comparing 8 with the left items, due to it being greater it stays in he same place</span></li>\n"
"<li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\" style=\" margin-top:0px; margin-bottom:0px; margin-left:48px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">( 3,6,8,5,2 ) –&gt;  ( 3,5,6,8,2 ), Swap since 3 &lt; 5 &lt; 6</span></li>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 2;\"><li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\" style=\" margin-top:0px; margin-bottom:0px; margin-left:48px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">( 3,5,6,8,2 ) –&gt;  ( 2,3,6,5,8 ), Swap since 2 is the samllest </span></li></ul>\n"
"<li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\" style=\" margin-top:0px; margin-bottom:0px; margin-left:48px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">This is now called a pass, where the algorithm has got from one side to the other</span></li></ul>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#273239;\">Second Pass: </span></p>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\" style=\" margin-top:0px; margin-bottom:24px; margin-left:24px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">Now, during second pass it will look like this:</span></li></ul>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 2;\"><li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\" style=\" margin-top:5px; margin-bottom:0px; margin-left:48px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">(2,3,6,5,8 ) –&gt;  (2,3,6,5,8 ),  3 - No swap</span></li>\n"
"<li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\" style=\" margin-top:0px; margin-bottom:0px; margin-left:48px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">( 2,3,6,5,8 ) –&gt; ( 2,3,6,5,8 ), 6 - No swap</span></li>\n"
"<li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\" style=\" margin-top:0px; margin-bottom:0px; margin-left:48px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">( 2,3,6,5,8 ) –&gt; ( 2,3,5,6,8 ), 5 - 3 &lt; 5 &lt; 6</span></li></ul>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 2;\"><li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\" style=\" margin-top:0px; margin-bottom:0px; margin-left:48px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">( 2,3,5,6,8 ) –&gt; ( 2,3,5,6,8 ) 8 - No swap</span></li></ul>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:48px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%; font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Third pass: </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">    </p>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#000000;\" style=\" margin-top:0px; margin-bottom:24px; margin-left:24px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">There is now one more pass the algorithm does, this is to go through and check that the array is sorted</span></li></ul>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#273239;\">After the 3rd pass we now see that the algorithm is sorted. It did this is 2 less passes than Bubble sort</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt;\"><br /></span></p></body></html>"))
        self.textEdit_7.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14pt; text-decoration: underline;\">Time Complexities</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:14pt; text-decoration: underline;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#273239; background-color:#ffffff;\">Time Complexity: O(N^2)</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#273239; background-color:#ffffff;\">Worst and Average Case Time Complexity: O(N^2). The worst case occurs when an array is reverse sorted.</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#273239; background-color:#ffffff;\">Best Case Time Complexity: O(N). The best case occurs when an array is already sorted.</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#273239; background-color:#ffffff;\">Auxiliary Space: O(1)</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#273239;\"><br /></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'urw-din\',\'sans-serif\'; font-size:12pt; color:#273239;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; background-color:#ffffff;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:11pt; color:#273239; background-color:#ffffff;\">The</span><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:11pt; color:#273239;\"> worst-case condition for bubble sort occurs when elements of the array are arranged in decreasing order.<br />In the worst case, the total number of iterations or passes required to sort a given array is (n-1). Where ‘n’ is a number of elements present in the array.</span></p>\n"
"<p style=\" margin-top:10px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:11pt; color:#000000;\">  At pass 1 :  Number of comparisons = (n-1)<br />                    Number of swaps = (n-1)</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:11pt; color:#000000;\">  At pass 2 :  Number of comparisons = (n-2)<br />                    Number of swaps = (n-2)</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:11pt; color:#000000;\"><br />  At pass n-1 :  Number of comparisons = 1<br />                       Number of swaps = 1</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:11pt; color:#000000;\">Now , calculating total number of comparison required to sort the array<br />= (n-1) + (n-2) +  (n-3) + . . . 2 + 1<br />= (n-1)*(n-1+1)/2  <br />= n (n-1)/2    </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:14pt; text-decoration: underline; color:#000000;\">Worse case for bubble, summarised:</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:11pt; color:#000000;\">Total number of swaps = Total number of comparison<br />Total number of comparison (Worst case) = n(n-1)/2<br />Total number of swaps (Worst case) = n(n-1)/2</span></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Insertion"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "Shell"))
        self.textEdit_8.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt; text-decoration: underline;\">What is it?</span></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:14pt; color:#273239; background-color:#ffffff;\">Cocktail Sort is a variation of bubble sort in that rather than going back to the start after a pass through the list, it goes back the way it came, sorting in the opposite order. this means that cocktail sort does not go though the list uneccesserily. </span></p></body></html>"))
        self.textEdit_9.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt; text-decoration: underline;\">How it Works</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt;\">Cocktail sort is the same as the bubble seen previously, however as said, it will sort backwards and sorting them reversly, e.g. movung the smallest items to the front.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:16pt;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt;\">This is taken from the end of the 1st pass of bubble sort.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:16pt;\"><br /></p>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 2;\"><li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:16pt; color:#000000;\" style=\" margin-top:0px; margin-bottom:0px; margin-left:48px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\"> ( 3,6,5,2,8 )</span></li></ul>\n"
"<p style=\" margin-top:0px; margin-bottom:10px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:16pt; color:#273239;\">Second Pass: </span></p>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:16pt; color:#000000;\" style=\" margin-top:0px; margin-bottom:24px; margin-left:24px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-size:17px;\">Now, it will sort it starting from the back to the front </span></li></ul>\n"
"<p style=\" margin-top:0px; margin-bottom:24px; margin-left:24px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:16pt; color:#000000;\">( 3,6,5,2,8 ) -&gt; ( 3,6,2,5,8 )</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:24px; margin-left:24px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:16pt; color:#000000;\">( 3,6,2,5,8 ) -&gt; ( 3,2,6,5,8 )</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:24px; margin-left:24px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:16pt; color:#000000;\">( 3,2,6,5,8 ) -&gt; ( 2,3,6,5,8 )</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:24px; margin-left:24px; margin-right:0px; -qt-block-indent:0; text-indent:0px; line-height:158%;\"><span style=\" font-family:\'urw-din\',\'sans-serif\'; font-size:16pt; color:#000000;\">It will will then carry on sorting, by next passing forward to back next. </span></p></body></html>"))
        self.textEdit_10.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"justify\" style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14pt;\">As the cocktail algorithm is very similar to the bubble sort, we shall compare the two. Their time complexities are the same, however, the Cocktail sort performs better. On average being less than two times faster than the bubble sort. Consider the example (2, 3, 4, 5, 1). Bubble sort requires four traversals of an array for this example, while Cocktail sort requires only two traversals. </span></p>\n"
"<p align=\"justify\" style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14pt;\">Cocktail sort is faster than Bubble sort as in a Bubble sort algorithm always traverses elements from left and moves the largest element to its correct position in the first iteration and second largest in the second iteration and so on. Cocktail Sort traverses through a given array in both directions alternatively. And so therefore, Cocktail sort does not go through the unnecessary iteration making it efficient for large arrays. </span></p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:14pt;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14pt;\">This table represents the different speeds in these two algorithms. Cocktail is faster (by 10 to 100ms on average) than a Bubble sort even if it is optimized. Even though they are very close and similar (with very small-time differences of hundreds of milliseconds) these sorting algorithms are being performed millions of times and so soon add up. Why it is essential to have the right sorting algorithm for the right size of data set. </span></p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:14pt;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14pt;\">The best case for Cocktail sort is O(n), </span></p>\n"
"<p align=\"justify\" style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14pt;\">The average case is O(n^2)</span></p>\n"
"<p align=\"justify\" style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14pt;\">The worst case is also O(n^2)</span></p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:14pt;\"><br /></p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:14pt;\"><br /></p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:14pt;\"><br /></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_4), _translate("MainWindow", "Cocktail"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_5), _translate("MainWindow", "Quick"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_6), _translate("MainWindow", "Selection"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_7), _translate("MainWindow", "Radix"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_8), _translate("MainWindow", "Bucket"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_9), _translate("MainWindow", "Heap"))
        self.pushButton.setText(_translate("MainWindow", "Back"))
        self.pushButton_2.setText(_translate("MainWindow", "Exit"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
